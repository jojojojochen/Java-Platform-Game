package main;

import gamestate.GameStateManager;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

import javax.swing.JPanel;

public class GamePanel extends JPanel implements Runnable, KeyListener{

	public static final int WIDTH = 320, HEIGHT=240, SCALE=2;
	private Thread thread;
	private boolean running;
	private int FPS = 60;
	private long targettime= 1000/ FPS;
	private BufferedImage image;
	private Graphics2D g;
	private GameStateManager gsm;
	
	public GamePanel(){
		super();
		setPreferredSize(new Dimension(WIDTH*SCALE, HEIGHT*SCALE));
		setFocusable(true);
		requestFocus();
	}

	public void addNotify(){
		super.addNotify();
		if(thread==null){
			thread = new Thread(this);
			addKeyListener(this);
			thread.start();
		}
	}
	
	private void init(){
		image = new BufferedImage(WIDTH,HEIGHT,BufferedImage.TYPE_INT_RGB);
		g = (Graphics2D) image.getGraphics();
		running = true;
		gsm=new GameStateManager();
	}
	
	public void run() {
		init();
		long start,elapsed,wait;
		while(running){
			start=System.nanoTime();
			update();
			draw();
			drawToScreen();
			elapsed= System.nanoTime() - start;
			wait = targettime - elapsed/1000000;
			if(wait<0){wait=1;}
			try{
				Thread.sleep(wait);
			}catch(Exception e){
				e.printStackTrace();
			}
		}	
	}
	private void update(){
		gsm.update();
	}
	private void draw(){
		gsm.draw(g);
	}
	private void drawToScreen(){
		Graphics g2 = getGraphics();
		g2.drawImage(image, 0, 0,WIDTH,HEIGHT, null);
		g2.dispose();
	}
	
	public void keyPressed(KeyEvent k) {
		gsm.keyPressed(k.getKeyCode());
	}

	public void keyReleased(KeyEvent k) {
		gsm.keyReleased(k.getKeyCode());
	}

	public void keyTyped(KeyEvent k) {
		
	}

}
